// Notice: Oreo builds are disabled by default until all problems are resolved!!!
//
// For Oreo compatibility we are forced to use supportLibVersion >= 26.1.0
// Unfortunately Android stopped supporting downloading libraries through the SDK Manager,
// @see https://developer.android.com/topic/libraries/support-library/setup.html
//
// You can enable oreo by adding following into root build.gradle:
//
// allprojects {
//   repositories {
//     maven { url 'https://maven.google.com' }
//   }
// }
//
// ext {
//   compileSdkVersion = 26
//   targetSdkVersion = 26
//   buildToolsVersion = "26.0.2"
//   supportLibVersion = "26.1.0"
//   googlePlayServicesVersion = "11.8.0"
//   oreoEXPERIMENTAL = "hellyes"
// }
//
//
// If you don't like this please ask react guys nicely to add google maven repo into
// their templates.

apply plugin: 'com.android.library'

def MOCKITO_CORE_VERSION = "1.10.19"
def POWERMOCK_VERSION = "1.6.2"
def ROBOLECTRIC_VERSION = "3.0"
def JUNIT_VERSION = "4.12"
def FEST_ASSERT_CORE_VERSION = "2.0M10"
def SUPPORT_TEST_VERSION = "0.5"

apply from: '../common/VERSIONS.gradle'
def applicationId = getApplicationId()
def playServicesVersion = getPlayServicesVersion()
def supportLibVersion = getSupportLibVersion()
def hasGradle3Support = getGradle3Support();

def projectFlavor = "preoreo"
if (rootProject.hasProperty('oreoEXPERIMENTAL')) {
    projectFlavor = "oreo"
}

repositories {
    jcenter()
    // Google dependencies are now hosted at Maven
    // unfortunately this is ignored when installing as react-native plugin
    maven {
        url 'https://maven.google.com'
    }
}

android {
    compileSdkVersion project.ext.getCompileSdkVersion()
    buildToolsVersion project.ext.getBuildToolsVersion()

    defaultConfig {
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        minSdkVersion 16
        targetSdkVersion project.ext.getTargetSdkVersion()
        versionCode 1 // intentionally not updating version as we're not uploading to any java repository
        versionName "1.0"
    }

    lintOptions {
        abortOnError false
    }
}

dependencies {
    compile project(path: ':react-native-mauron85-background-geolocation-common')
    compile 'com.facebook.react:react-native:+'
    testCompile "junit:junit:${JUNIT_VERSION}"
    testCompile "org.powermock:powermock-api-mockito:${POWERMOCK_VERSION}"
    testCompile "org.powermock:powermock-module-junit4-rule:${POWERMOCK_VERSION}"
    testCompile "org.powermock:powermock-classloading-xstream:${POWERMOCK_VERSION}"
    testCompile "org.mockito:mockito-core:${MOCKITO_CORE_VERSION}"
    testCompile "org.easytesting:fest-assert-core:${FEST_ASSERT_CORE_VERSION}"
    testCompile "org.robolectric:robolectric:${ROBOLECTRIC_VERSION}"

//    androidTestCompile "com.android.support:support-annotations:$supportLibVersion"
    androidTestCompile "com.android.support.test:runner:${SUPPORT_TEST_VERSION}"
    androidTestCompile "com.android.support.test:rules:${SUPPORT_TEST_VERSION}"
}
